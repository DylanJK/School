@using WeddingsForYou.Models;
@using System.Data.SqlClient;
@using System.Configuration;
@model WeddingsForYou.Models.Budget

@{
    ViewBag.Title = "Budget";
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#showBudgetTextBox").hide();
        });

        $("#manageBudget").click(function () {
            $("#showBudgetTextBox").show(200);
        });

    </script>

}


@{
    var user = Session["user"] as User;
}
<h2>Budget</h2>


@if (user != null)
{


    int userID = 0;
    int itemID = 0;
    string description = "";
    string paidOrNot = "";
    double cost = 0;

    string[] lettersAndNumbers = { "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q",
                                 "r","s","t","u","v","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M",
                                 "N","O","P","Q","R","S","T","U","V","X","Y","Z"};

    bool successOnQuery = false;

    var allValue = Session["All"];
    var paidValue = Session["Paid"] as Budget;
    var unPaidValue = Session["UnPaid"] as Budget;

    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["WeddingsForYouDB"].ConnectionString);

    con.Open();
    SqlCommand cmd = null;

    try
    {
        //If the User Has Selected the Un-Paid Button
        if (unPaidValue.unpaid == "Un-Paid")
        {
            cmd = new SqlCommand("SELECT * FROM Budget WHERE Id=" + @user.Id + " AND Paid='No'", con);
            successOnQuery = true;
        }
    }
    catch
    {
        //If It Fails
    }

    try
    {
        //If the User has Selected the Paid Button
        if (paidValue.paid == "Paid")
        {
            cmd = new SqlCommand("SELECT * FROM Budget WHERE Id=" + @user.Id + " AND Paid='Yes'", con);
            successOnQuery = true;
        }
    }
    catch
    {
        //If It Fails
    }

    try
    {
        //If the User has Selected the All Button
        if (allValue == "All")
        {
            cmd = new SqlCommand("SELECT * FROM Budget WHERE Id=" + @user.Id + "", con);
            successOnQuery = true;
        }
    }
    catch
    {
        //If It Fails
    }


    //If the User Has Not Selected Any of them
    if (successOnQuery == false)
    {
        cmd = new SqlCommand("SELECT * FROM Budget WHERE Id=" + @user.Id + "", con);
    }
    cmd.ExecuteNonQuery();

    SqlDataReader readBudgetInfo = cmd.ExecuteReader();

    using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-lg-4">
                <b><u>Description</u></b>
            </div>
            <div class="col-lg-4">
                <b><u>Cost</u></b>
            </div>
            <div class="col-lg-3">
                <input type="submit" class="btn btn-default" value="All" name="All" id="All" />
                <input type="submit" class="btn btn-default" value="Paid" name="Paid" id="Paid" />
                <input type="submit" class="btn btn-default" value="Un-Paid" name="UnPaid" id="UnPaid" />
            </div>
            <div class="col-lg-1">
            </div>
        </div>

        //Put All The Results from the Database into Variables 
        //So They Can Be called for Populating the interface
        while (readBudgetInfo.Read())
        {
            userID = (int)readBudgetInfo[0];
            itemID = (int)readBudgetInfo[1];
            description = (string)readBudgetInfo[2];
            cost = (double)readBudgetInfo[3];
            paidOrNot = (string)readBudgetInfo[4];

            
              //Have this to Not Produce Any Redundant Lines if there are any
         for (int i = 0; i < lettersAndNumbers.Length; i++)
           { 
                
            if (description.Contains(lettersAndNumbers[i]))
            {
            
            
            //If paidOrNot variable == Yes set it to Yes so we
            //Can Put match the Value against the Budget Item
            if (paidOrNot == "Yes")
            {
                paidOrNot = "Paid";
            }
            //If paidOrNot variable == No set it to No so we
            //Can Put match the Value against the Budget Item
            if (paidOrNot == "No")
            {
                paidOrNot = "Un-Paid";
            }

            <div class="row">
                <div class="col-lg-4">
                    <b>@description</b>
                </div>
                <div class="col-lg-4">
                    <b>$@cost</b>
                </div>
                <div class="col-lg-2">
                    <b>@paidOrNot</b>
                    <input type="radio" value="Un-Check" name="UnCheck" id="UnCheck" />
                    <button class="btn btn-default" type="submit" value="@itemID" name="Update" id="Update">Update</button>
                </div>
                <div class="col-lg-2">
                    <a class="btn btn-default" href="../EditBudgetItem/EditBudgetItem?itemID=@itemID" data-id="@itemID">Edit</a>
                    <button class="btn btn-default" type="submit" value="@itemID" name="Delete" id="Delete">Delete</button>
                 
                </div>
                <hr style="height:1px;border:solid;color:black;background-color:black;" />
            </div>
                //Break out of the Forloop Once Gone Through Here
                break;
            }
           }
        }
    }
    <div class="row">
        <a class="btn btn-default" href="../BudgetItem/BudgetItem?id=@userID" data-id="@userID">Add New Item</a>
        <a class="btn btn-default" name="manageBudget" id="manageBudget">Manage Budget Amount</a>
    </div>


}

@using (Html.BeginForm())
{    <div class="row">
        <div id="showBudgetTextBox">
            <br />
            <label>Enter Budget Amount</label>
            $@Html.TextBoxFor(m => m.budgetAmount)
            <input type="submit" value="Submit" />
        </div>
    </div>
}
